
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      // Admins can read/write any user document
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
      // Logged-in users can read/write their own document
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Listings collection
    match /listings/{listingId} {
      // Anyone can read approved business listings
      allow read: if resource.data.status == 'approved';

      // Logged-in users can create listings
      allow create: if request.auth != null;
      
      // Only the business owner or an admin can update a listing
      allow update: if request.auth != null && (request.auth.uid == resource.data.ownerId || isAdmin(request.auth.uid));

      // Only admins can delete a listing
      allow delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    
     match /listings/{listingId}/reviews/{reviewId} {
        // Logged-in users can create reviews
        allow create: if request.auth != null;
     }

    // Categories collection
    match /categories/{categoryId} {
        // Anyone can read categories
        allow read: if true;
        // Only admins can create, update, delete categories
        allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Notifications for users
    match /users/{userId}/notifications/{notificationId} {
        // A user can read/write their own notifications
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
