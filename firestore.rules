
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User collection rules
    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if isAuth();
      // Users can only read/update their own data
      allow read, update: if request.auth.uid == userId;
      // Admins can read/update any user data
      allow read, update: if isAdmin();
    }
    
    // Notifications sub-collection rules
    match /users/{userId}/notifications/{notificationId} {
        // Users can read/write to their own notifications sub-collection
        allow read, write: if request.auth.uid == userId;
    }
    
    // Listings collection rules
    match /listings/{listingId} {
      // Authenticated users can create listings
      allow create: if isAuth();
      
      // Anyone can read a single approved listing
      allow get: if resource.data.status == 'approved';
      
      // Authenticated users can read any single listing (for update prerequisite)
      allow get: if isAuth();

      // Anyone can query (list) approved listings
      allow list: if !('status' in request.query.where) || request.query.where.status == 'approved';

      // Authenticated users can update the reviews field
      allow update: if isAuth() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reviews']);
      
      // Admins can perform any action
      allow read, write: if isAdmin();
    }
  }
}

    