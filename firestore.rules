
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Listings
    match /listings/{listingId} {
      // Anyone can read approved listings
      allow read: if resource.data.status == 'approved' || isAdmin();
      
      // Only authenticated users can create listings
      allow create: if request.auth != null;
      
      // Only the owner or an admin can update
      allow update: if request.auth.uid == resource.data.ownerId || isAdmin();
      
      // Only an admin can delete
      allow delete: if isAdmin();
    }

    // Categories
    match /categories/{categoryId} {
      // Anyone can read categories
      allow read: if true;
      
      // Only admins can create, update, or delete categories
      allow write: if isAdmin();
    }
    
    // Users
    match /users/{userId} {
      // A user can read/update their own data. Admins can read/update any user data.
      allow read, update: if request.auth.uid == userId || isAdmin();
      
      // Anyone can create a user document (on signup)
      allow create: if true;

      // Admins can delete users (from the admin panel)
      allow delete: if isAdmin();

      // Notifications subcollection
      match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Messages
    match /messages/{messageId} {
      // Anyone can create a message
      allow create: if true;

      // Only admins can read, update, or delete messages
      allow read, update, delete: if isAdmin();
    }
  }
}
