
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /listings/{listingId} {
      allow read: if resource.data.status == 'approved' || (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create, update, delete: if request.auth != null && (request.auth.uid == resource.data.ownerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /messages/{messageId} {
      allow read, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Allow any authenticated user to create a message, and validate the data.
      allow create: if request.auth != null
        && request.resource.data.name is string
        && request.resource.data.email is string
        && request.resource.data.message is string
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.createdAt == request.time;
    }

    // Fallback for user notifications (if needed in the future)
    match /users/{userId}/notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
