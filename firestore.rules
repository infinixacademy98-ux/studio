
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /listings/{listingId} {
      // Public can read approved listings
      allow get: if resource.data.status == 'approved';
      allow list: if true; // Allow querying, but rules on get will enforce status check for results

      // Authenticated users can create new listings
      allow create: if request.auth != null;
      
      // Only the owner or an admin can update a listing
      allow update: if request.auth.uid == resource.data.ownerId || isAdmin();

      // Only an admin can delete a listing
      allow delete: if isAdmin();
    }

    match /users/{userId} {
      // Users can read their own document, admins can read any
      allow get: if request.auth.uid == userId || isAdmin();
      // Users can create their own user document (on signup)
      allow create: if request.auth.uid == userId;

      // Admins can manage all user documents
      allow list, update, delete: if isAdmin();

      // Notifications subcollection
      match /notifications/{notificationId} {
        // Users can read and update their own notifications
        allow read, update, list: if request.auth.uid == userId;
        // Admins can do anything
        allow write, delete: if isAdmin();
      }
    }
  }
}
