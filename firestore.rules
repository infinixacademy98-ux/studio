
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Listings can be read by anyone if approved, or by admin/owner otherwise
    match /listings/{listingId} {
      allow read: if resource.data.status == 'approved' ||
                     (request.auth != null && (isAdmin() || request.auth.uid == resource.data.ownerId));
      allow create: if request.auth != null;
      allow update: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.ownerId);
      allow delete: if isAdmin();

      // Reviews are part of the listing subcollection
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null;
      }
    }

    // Categories are public for reading, admin for writing
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null && (isAdmin() || request.auth.uid == userId);
      allow write: if isAdmin(); // Only admins can change roles, etc.

      // Notifications subcollection
      match /notifications/{notificationId} {
          allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Messages can be created by anyone, but only read/deleted by admins
    match /messages/{messageId} {
      allow create: if true;
      allow read, delete: if isAdmin();
    }

  }
}
