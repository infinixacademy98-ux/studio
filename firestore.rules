
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Admins can do anything
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User can manage their own data
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    // Listings rules
    match /listings/{listingId} {
      // Admins can read/write any listing
      allow read, write: if isAdmin();
      
      // Anyone can see approved listings
      allow list: if !isAdmin();
      
      // Authenticated users can read single listings before writing reviews
      allow get: if request.auth != null;
      
      // Authenticated users can create listings, which start as 'pending'
      allow create: if request.auth != null && request.resource.data.status == 'pending';
      
      // Logged-in users can update the 'reviews' field of any listing
      allow update: if request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reviews']);
    }
    
    // Notifications rules
    match /users/{userId}/notifications/{notificationId} {
        // User can read/write their own notifications
        allow read, write: if request.auth.uid == userId;
        // Admins can read notifications for moderation/support
        allow read: if isAdmin();
    }
  }
}
