rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for business listings
    match /listings/{listingId} {
      // READ:
      // - Anyone can read a listing if it is approved.
      // - Admins can read any listing regardless of status.
      allow read: if resource.data.status == 'approved' || isAdmin();

      // CREATE:
      // - Any authenticated user can create a listing.
      // - The ownerId must match the user's ID.
      // - The initial status must be 'pending'.
      allow create: if request.auth != null &&
                      request.resource.data.ownerId == request.auth.uid &&
                      request.resource.data.status == 'pending';
      
      // UPDATE, DELETE:
      // - Only admins can update or delete listings.
      allow update, delete: if isAdmin();
    }

    // Rules for user data
    match /users/{userId} {
      // READ:
      // - Admins can read any user profile.
      // - A user can read their own profile.
      allow read: if isAdmin() || request.auth.uid == userId;

      // UPDATE:
      // - A user can update their own profile.
      allow update: if request.auth.uid == userId;
      
      // CREATE: 
      // - Anyone can create a user document (sign up).
      allow create: if request.auth != null;
    }
    
    // Rules for user notifications
    match /users/{userId}/notifications/{notificationId} {
        // Allow users to access their own notifications
        allow read, write: if request.auth.uid == userId;
    }
  }
}