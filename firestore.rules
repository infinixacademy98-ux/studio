
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Listings Collection
    match /listings/{listingId} {
      // READ: Anyone can read approved listings.
      allow read: if resource.data.status == 'approved';

      // CREATE: Any authenticated user can create a new listing.
      // New listings must have a 'pending' status and the ownerId must match the user's UID.
      allow create: if request.auth != null &&
                       request.resource.data.status == 'pending' &&
                       request.resource.data.ownerId == request.auth.uid;

      // UPDATE: Only admins can update listings (e.g., to approve them).
      allow update: if isAdmin(request.auth.uid);

      // DELETE: Only admins can delete listings.
      allow delete: if isAdmin(request.auth.uid);
    }

    // Users Collection
    match /users/{userId} {
      // READ, WRITE: Users can read and write their own document. Admins can read/write any user document.
      allow read, write: if request.auth.uid == userId || isAdmin(request.auth.uid);

      // Notifications Subcollection
      match /notifications/{notificationId} {
        // READ, WRITE: Users can manage their own notifications.
        allow read, write: if request.auth.uid == userId;
      }
    }
  }
}
