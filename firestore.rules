service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Users collection rules
    match /users/{userId} {
      // Admins can do anything. Users can read/update their own data.
      allow read, update: if isAdmin() || request.auth.uid == userId;
      // Anyone can create their own user document (signup).
      allow create: if request.auth.uid == userId;
      // Only admins can delete user documents.
      allow delete: if isAdmin();
    }

    // Listings collection rules
    match /listings/{listingId} {
      // Anyone can read approved listings. Admins can read any listing.
      allow read: if resource.data.status == 'approved' || isAdmin();

      // Only authenticated users can create listings.
      allow create: if isAuthenticated() && request.resource.data.ownerId == request.auth.uid;

      // Users can update their own listings. Admins can update any listing.
      // Users can also update the 'reviews' array of any listing to add their review.
      allow update: if (request.auth.uid == resource.data.ownerId) || isAdmin() ||
                     (isAuthenticated() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reviews']));

      // Only admins can delete listings.
      allow delete: if isAdmin();
    }

    // Categories collection rules
    match /categories/{categoryId} {
      // Anyone can read categories.
      allow read: if true;
      // Only admins can create, update or delete categories.
      allow write: if isAdmin();
    }
    
    // Messages collection rules
    match /messages/{messageId} {
        // Authenticated users can create messages
        allow create: if isAuthenticated();
        // Only admins can read or delete messages
        allow read, delete: if isAdmin();
    }

    // Notifications subcollection rules
    match /users/{userId}/notifications/{notificationId} {
      // A user can read/write their own notifications.
      // This allows the client to mark notifications as 'read'.
      allow read, write: if request.auth.uid == userId;
    }
  }
}
