rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS collection
    // - Users can read their own document
    // - Users can be created by anyone (during signup)
    // - Only admins can update user roles
    match /users/{userId} {
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow create: if true;
      allow update: if isAdmin(); // Protect role field
      allow delete: if isAdmin();

      // NOTIFICATIONS subcollection
      // - Users can read, create, update their own notifications
      match /notifications/{notificationId} {
        allow read, write: if isSignedIn() and isOwner(userId);
      }
    }

    // LISTINGS collection
    // - Anyone can read approved listings.
    // - Signed-in users can create new listings (status must be 'pending').
    // - Only the owner or an admin can update a listing.
    // - Admins can approve listings by changing status.
    // - Only admins can delete listings.
    match /listings/{listingId} {
      allow read: if resource.data.status == 'approved';
      allow create: if isSignedIn() && request.resource.data.status == 'pending';
      allow update: if isSignedIn() && (isOwner(resource.data.ownerId) || isAdmin());
      allow delete: if isAdmin();
    }
  }
}
    